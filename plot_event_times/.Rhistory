ls()
acf(my.table)
trip.mode
trip.mode[2]
ls()
names(trips)
?wavelet
??wavelet
??wtmm
l
library(wavelets)
?cut
??cut
?cut
ls()
plot(my.table)
plot(my.table, type = "s")
 plot(my.table, type = "s")
ls()
library(wavelet)
library(wavelets)
?cwt
?dwt
ls()
head(my.table)
ls()
names(trips.detailed)
?dwt
head(time.series)
dwt(time.series)
library(timeseries)
library(tseries)
ls()
head(time.series)
myts <- irts(time.series$Var1, time.series$value)
class(time.series)
class(time.series$Var1)
 myts <- irts(as.vector(time.series$Var1), as.vector(time.series$value))
?as.vector
 myts <- irts(as.POSIXct(time.series$Var1), as.numeric(time.series$value))
length(time.series$Var1)
length(time.series$value)
 myts <- irts(as.POSIXct(time.series$Var1), as.numeric(time.series$Freq))
dwt(myts)
??irts
?irts
head(myts)
?irts-methods
as.xts(myts)
library(xts)
install.packages("xts")
library(xts)
myts2 <- as.xts(myts)
head(myts2)
class(myts2)
names(myts2)
head(time.series)
unix.time.series <- dataframe(as.numeric(time.series$Var1), time.series$Freq)
unix.time.series <- data.frame(as.numeric(time.series$Var1), time.series$Freq)
head(unix.time.series)
myts <- as.ts(unix.time.series)
head(myts)
str(myts)
dwt(myts)
head(myts)
str(myts)
head(unix.time.series)
?as.ts
myts <- as.ts(unix.time.series$time.series.Freq)
head(myts)
head(myts, 20)
plot(myts)
ls
ls()
names(trips)
categories
categories
?group
?aggregate
names(trips)
?aggregate
categories
ls()
head(trips)
head(trips)
ls()
?atomic
?eval
 category.trips <- subset(trips, trips[,category] == cate
at
cat
cat <- categories[1]
cat
length(events.by.category)
head(events.by.category[[1]])
?POSIXct
POSIXct(sys.time())
as.POSIXct(sys.time())
 as.POSIXct(Sys.time())
str(events.by.category)
ls()
names(trips)
ls()
ls()
start.time
Sys.time()
as.POSIXct(as.character(Sys.time()))
start.time
start.time
asPOSIXlct("april 1, 2008")
 asPOSIXct("april 1, 2008")
as.POSIXct("april 1, 2008")
?as.POSITct
?as.POSIXct
as.POSIXct("04-01-2008 00:00:00 CEST", tz="CEST")
 as.POSIXct("2008-04-01 00:00:00 CEST")
end.time
start.time
unclass(start.time)
unclass(end.time)
class(end.time)
class(start.time)
names(unclass(end.time))
names(unclass(start.time))
class(trips$timestamp.event)
dim(events.within.period)
dim(trips)
str(events.by.category)
dim(events.by.category)
length(events.by.category)
ls()
timescale
dim(events)
names(events)
head(my.table)
head(my.table)
table[1]
my.table[1]
my.table[1,1]
class(my.table[1])
my.table[2]
plot(my.table[1])
x <- list()
x[[1,1]] <- a
x[[1,1]] <- "a"
x[[1]][[1]] <- "a"
c + geom_bar()
names(temp)
head(temp)
ls()
ls()
head(event.frequency.table)
names(event.frequency.table)
head(event.frequency.table)
names(event.frequency.df)
names(event.frequency.df)
categories
timescale <- timescales[1]
events.this.category <- events.by.category[1]
head(events.this.category)
events.this.category <- events.by.category[[1]]
 head(events.this.category)
qplot(data=events.by.category, x=timestamp.event, color=hvm)
names(events.by.category)
 qplot(data=events.this.category, x=timestamp.event, color=hvm)
qplot(data=events.within.period, x=timestamp.event, color=hvm)
categories
all.categories
names(events.within.period)
good.categories
 library(scales)
class(events.good.categories$timestamp.event)
head(as.Date(events.good.categories$timestamp.event))
class(as.Date(events.good.categories$timestamp.event))
head(events.good.categories$timestamp.event)
p
p
p
p
names(unclassed.data.frame)
p
p
p
p
p
?ggtitle
?subset
subset(airquality, Day != 1, select = -Temp)[1:5, ]
names(airquality)
airquality
ls()
index <- 1
p
index <- 1
p
 p <- qplot(data=events.good.categories, x=timestamp.event, geom = "bar",  color=hvm, fill=hvm, position="dodge")
p
+ geom_point()
p <- qplot(data=events.good.categories, x=timestamp.event, geom = "point",  color=hvm, fill=hvm, position="dodge")
p
?scale_x_datetime
paste(timescale.intervals[index], timescales[index])
 qplot(data=events.good.categories, x=timestamp.event, geom = "bar",  color=hvm, fill=hvm, position="dodge", binwidth = 100) + 
index <- 1
p
p
p
binwidth
p
p
timescale.index <- 1
ls()
timescale
timescale
timescale.index <- 1
index <- 1
events <- events.list[[1]]
events.timeperiod[events.index]
p
p
events <- events.list[[1]]
p
